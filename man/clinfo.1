.TH CLINFO 1 "2016-01-12" "clinfo 2.1.16.01.12"

.SH NAME

clinfo \- show OpenCL platforms and devices

.SH SYNOPSIS
.B clinfo
.RI [ "options ..." ]

.SH DESCRIPTION
.B clinfo
prints all available information about all OpenCL platforms
available on the system and the devices they expose.

.SH OPTIONS
.B clinfo
accepts the following options:
.TP 2
.B --human
produce human-friendly output; this is the default (except
as noted below);
.TP
.B --raw
produce machine-friendly output; this is the default if
.B clinfo
is invoked with a name that contains the string
.RI \*(lq raw \*(rq;
.TP
.B --offline
shows also offline devices for platforms that expose this feature;
.TP
.BR -l ", " --list
list platforms and devices by name, with no (other) properties;
.TP
.BR -h ", " -?
show usage;
.TP
.BR --version ", " -v
show program version.

.SH CONFORMING TO

OpenCL 1.1, OpenCL 1.2, OpenCL 2.0, OpenCL 2.1.

.SH EXTENSIONS

Supported OpenCL extensions:
.TP 2
.BR cl_khr_fp16 ", " cl_khr_fp64 ", " cl_amd_fp64 ", " cl_APPLE_fp64_basic_ops
for information about support for half-precision and double-precision
floating-point data types;
.TP
.B cl_khr_image2d_from_buffer
for information about the base address and pitch alignment requirements
of buffers to be used as base for 2D images;
.TP
.B cl_khr_spir
for information about the supported SPIR (Standard Portable Intermediate
Representation) versions;
.TP
.B cl_khr_icd
for the suffix of vendor extensions functions;
.TP
.B cl_ext_device_fission
for device fission support in OpenCL 1.1 devices;
.TP
.B cl_ext_atomic_counters_32
.TQ
.B cl_ext_atomic_counters_64
for the atomic counter extension;
.TP
.B cl_amd_device_attribute_query
for AMD-specific device attributes;
.TP
.B cl_amd_offline_devices
to show offline devices exposed by the platform, if requested (see
.B --offline
option);
.TP
.B cl_amd_svm
for Shared Virtual Memory (SVM) capabilities in OpenCL 1.2 devices;
.TP
.B cl_nv_device_attribute_query
for NVIDIA-specific device attributes;
.TP
.B cl_intel_exec_by_local_thread
for the Intel extension allowing CPU devices to run kernels as part of
the current host thread;
.TP
.B cl_intel_advanced_motion_estimation
for the version of the Intel Motion Estimation accelerator version;
.TP
.B cl_intel_simultaneous_sharing
for simultaneous CL/GL/DirectX context sharing (only partial support);
.TP
.B cl_altera_device_temperature
for the Altera extension to query the core temperature of the device;
.TP
.B cl_qcom_ext_host_ptr
for the QUALCOMM extension to query page size and required padding in external
memory allocation.

.SH NOTES
Some information is duplicated when available from multiple sources.
Examples:
.IP \(bu 2
supported device partition types and domains as obtained using the
.B cl_ext_device_fission
extension typically match the ones obtained using
the core OpenCL 1.2 device partition feature;
.IP \(bu
the preferred work-group size multiple matches the NVIDIA warp size (on
NVIDIA devices) or the AMD wavefront width (on AMD devices).

.P
Some floating-point configuration flags may only be meaningful for
specific precisions and/or specific OpenCL versions. For example,
.B CL_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT
is only relevant for single precision in OpenCL 1.2 devices.

.P
The implementation-defined behavior for NULL platform or context
properties is tested for the following API calls:
.TP 2
.B clGetPlatformInfo()
by trying to show the platform name;
.TP
.B clGetDeviceIDs()
by trying to enumerate devices; the corresponding platform (if any)
is then detected by querying the device platform of the first device;
.TP
.B clCreateteContext()
by trying to create a context from a device from the previous
list (if any), and a context from a device from a different platform;
.TP
.B clCreateteContextFromType()
by trying to create contexts for each device type (except DEFAULT).

.SH EXPERIMENTAL FEATURES
.P
Support for OpenCL 2.0 and OpenCL 2.1 properties is not fully tested.

.P
Raw (machine-parsable) output is considered experimental, the output format
might still undergo changes.

.P
The properties of the ICD loader will also be queried if the
.B clGetICDLoaderInfoOCLICD
extension function is found.

.P
The highest OpenCL version supported by the ICD loader is detected
with some trivial heuristics (symbols found); a notice is output
if this is lower than the highest platform OpenCL version, or
if the detected version doesn't match the one declared by the ICD
loader itself.

.SH BUGS
The
.B CL_DEVICE_GLOBAL_FREE_MEMORY_AMD
device information is documented in v3 of the
.B cl_amd_device_attribute_query
extension specification as being the global free memory in KBytes, but no
explanation is given on why there are two values.

The
.B CL_DEVICE_AVAILABLE_ASYNC_QUEUES_AMD
device information is documented in v3 of the
.B cl_amd_device_attribute_query
extension specification, but not reported by current
drivers, so it is currently disabled.

The
.B CL_DEVICE_SIMULTANEOUS_INTEROPS_INTEL
device information for the
.B cl_intel_simultaneous_sharing
extension is not reported, due to lack of knowledge on the possible
values the list elements can have.

.P
Please report any issues on
.UR http://github.com/Oblomov/clinfo
the project tracker on GitHub
.UE .

